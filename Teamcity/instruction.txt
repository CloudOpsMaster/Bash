    Installing Docker  https://lunarfrog.com/blog/configuring-teamcity-docker-linux-dotnetcore-builds
If you are starting from a clean system, you will need to install Docker and Docker Compose first. 
The detailed instructions on installing Docker for Ubuntu are available at
     https://docs.docker.com/engine/installation/linux/ubuntu/ and to install Docker Compose use apt-get:

      --> sudo apt-get install docker-compose <--
      
Folder structure
I use  /srv folder as a root folder for all the data related to TeamCity builds and here is the 
full hierarchy of folders you will need to create inside of 
       /srv:
/srv/docker       -   is used to store docker-compose.yaml file (see below for more details)
/srv/postgresql/data    -  is used to persist the PostgreSQL database
/srv/teamcity/agents/00X/conf    -  contains the corresponding agent’s configuration
/srv/teamcity/data    -  is mounted to the TeamCity container to provide a persistent storage for the database drivers,
 plugins, etc.
/srv/teamcity/logs   -   contains TeamCity’s logs
When the folders are created, we are ready to define the stack.

Docker containers
Create a     docker-compose.yaml    file   in the 
                 -- /srv/docker folder and paste the following content

  -->  docker-compose up -d   <--
  
  TeamCity first start
  
  Now you need to connect TeamCity with the running instance of PostgreSQL. But before, you need JDBC drivers – they are not shipped with TeamCity. In terminal, open /srv/teamcity/data/lib/jdbc and put downloaded drivers here, for example by executing

-->   sudo wget https://jdbc.postgresql.org/download/postgresql-42.1.1.jar   <--



The plugin can be downloaded at plugins.jetbrains.com and can be installed via TeamCity UI – just open Administration\Plugins List page and upload the plugin. To enable the plugin, TeamCity requires restart and, unfortunately, there is no way to do it from the UI, so you need to use console again, go to /srv/docker and do

-->   docker-compose stop   <--
-->   docker-compose up -d   <--

After that, the plugin is installed and the agents are capable to use it (see the agent’s properties)
